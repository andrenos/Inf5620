#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{braket}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language norsk
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\secnumdepth -1
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "breaklines=true,frame=single,language={C++}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
INF5620 OPPGAVER
\end_layout

\begin_layout Author
Andreas Nyg√•rd Osnes
\end_layout

\begin_layout Part
Exercise 1
\end_layout

\begin_layout Standard
For Newtons law of cooling we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{dT}{dt}=-k\left(T-T_{s}\right),\ \ T\left(0\right)=T_{0}
\]

\end_inset


\end_layout

\begin_layout Standard
We can find explicit computational formulas for the new temperature values
 using Forward-Euler, Backward-Euler or Crank-Nicolson.
\end_layout

\begin_layout Paragraph
Forward Euler
\end_layout

\begin_layout Standard
The Forward-Euler scheme is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left.\frac{dT}{dt}\right|_{t}=\frac{T\left(t+\Delta t\right)-T\left(t\right)}{\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
Solving for 
\begin_inset Formula $T\left(t+\Delta t\right)$
\end_inset

 and inserting the expression for 
\begin_inset Formula $\frac{dT}{dt}$
\end_inset

 gives:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T\left(t+\Delta t\right)=T\left(t\right)-k\Delta t\left(T\left(t\right)-T_{s}\right)
\]

\end_inset


\end_layout

\begin_layout Paragraph
Backward Euler
\end_layout

\begin_layout Standard
The Backward-Euler scheme is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left.\frac{dT}{dt}\right|_{t}=\frac{T\left(t\right)-T\left(t-\Delta t\right)}{\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
which gives: 
\begin_inset Formula 
\[
T\left(t\right)=-k\Delta t\left(T\left(t\right)-T_{s}\right)+T\left(t-\Delta t\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T\left(t\right)=\frac{k\Delta tT_{s}+T\left(t-\Delta t\right)}{1+k\Delta t}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Crank-Nicholson
\end_layout

\begin_layout Standard
The Crank-Nicholson scheme combines the above schemes:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{1}{2}\left[\left.\frac{dT}{dt}\right|_{t}+\left.\frac{dT}{dt}\right|_{t+\Delta t}\right]=\frac{T\left(t+\Delta t\right)-T\left(t\right)}{\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
which gives:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{1}{2}\left[-k\left(T\left(t\right)-T_{s}\right)-k\left(T\left(t+\Delta t\right)-T_{s}\right)\right]=\frac{T\left(t+\Delta t\right)-T\left(t\right)}{\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{1}{2}\left[2kT_{s}-kT\left(t\right)-kT\left(t+\Delta t\right)\right]=\frac{T\left(t+\Delta t\right)-T\left(t\right)}{\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-\frac{1}{2}kT\left(t+\Delta t\right)-\frac{T\left(t+\Delta t\right)}{\Delta t}=-\frac{T\left(t\right)}{\Delta t}+\frac{k}{2}T\left(t\right)-kT_{s}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T\left(t+\Delta t\right)\left(-\frac{1}{2}k-\frac{1}{\Delta t}\right)=T\left(t\right)\left(-\frac{1}{\Delta t}+\frac{1}{2}k\right)-kT_{s}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T\left(t+\Delta t\right)=\frac{T\left(t\right)\left(-\frac{1}{\Delta t}+\frac{1}{2}k\right)-kT_{s}}{\left(-\frac{1}{2}k-\frac{1}{\Delta t}\right)}
\]

\end_inset


\end_layout

\begin_layout Part
Exercise 2
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $\theta$
\end_inset

-rule is found from the general combination of the Forward- and Backward-Euler:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{T\left(t+\Delta t\right)-T\left(t\right)}{\Delta t}=\theta\left.\frac{dT}{dt}\right|_{t}+\left(1-\theta\right)\left.\frac{dT}{dt}\right|_{t+\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
Setting 
\begin_inset Formula $\theta=1$
\end_inset

 gives the forward Euler scheme, setting 
\begin_inset Formula $\theta=0$
\end_inset

 gives the backward Euler sceme and setting 
\begin_inset Formula $\theta=\frac{1}{2}$
\end_inset

 gives the Crank-Nicolson scheme.
\end_layout

\begin_layout Standard
The implementation is shown below in Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "prog:cooling"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "Uke1/cooling.py"
lstparams "breaklines=true,caption={Algorithm for Newtons cooling with theta-rule},frame=single,label={prog:cooling},language=Python"

\end_inset


\end_layout

\begin_layout Part
Exeecise 3
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T_{2pm}=26.7^{\circ}C,\qquad T_{3pm}=25.8^{\circ}C
\]

\end_inset


\end_layout

\begin_layout Standard
Using Forward-Euler to find 
\begin_inset Formula $k$
\end_inset

 we get:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-k\left(T\left(2_{pm}\right)-T_{s}\right)=\frac{T\left(2_{pm}+1_{h}\right)-T\left(2_{pm}\right)}{1_{h}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
k=-\frac{25.8-26.7}{3600\left(26.7-20.0\right)}=3.7\times10^{-5}
\]

\end_inset


\end_layout

\begin_layout Standard
Using this value for 
\begin_inset Formula $k$
\end_inset

 we can find the time of death using Algoritm 
\begin_inset CommandInset ref
LatexCommand ref
reference "prog:detective"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "Uke1/detective.py"
lstparams "breaklines=true,caption={Algorithm for finding time of death },frame=single,label={prog:detective},language=Python"

\end_inset


\end_layout

\end_body
\end_document
